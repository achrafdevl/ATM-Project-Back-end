const fs = require("fs");
const readlineSync = require("readline-sync");
const EventEmitter = require("events");

const eventEmitter = new EventEmitter();

//! Load users from users.json
const usersFile = "users.json";
let users = [];
if (fs.existsSync(usersFile)) {
  const data = fs.readFileSync(usersFile, "utf8");
  users = JSON.parse(data);
}

//! Load transactions from transactions.json
const transactionsFile = "transactions.json";
let transactions = [];
if (fs.existsSync(transactionsFile)) {
  const data = fs.readFileSync(transactionsFile, "utf8");
  transactions = JSON.parse(data);
}

//! Helper function to save data to files
const saveData = () => {
  fs.writeFileSync(usersFile, JSON.stringify(users, null, 2), "utf8");
  fs.writeFileSync(
    transactionsFile,
    JSON.stringify(transactions, null, 2),
    "utf8"
  );
};

//! Event listeners for different ATM operations
eventEmitter.on("deposit", (user, amount) => {
  user.balance += amount;
  user.transactions.push({
    type: "deposit",
    amount,
    date: new Date().toISOString().split("T")[0],
  });
  transactions.push({
    accountID: user.accountID,
    type: "deposit",
    amount,
    date: new Date().toISOString(),
  });
  saveData();
});

eventEmitter.on("withdraw", (user, amount) => {
  if (user.balance >= amount) {
    user.balance -= amount;
    user.transactions.push({
      type: "withdraw",
      amount,
      date: new Date().toISOString().split("T")[0],
    });
    transactions.push({
      accountID: user.accountID,
      type: "withdraw",
      amount,
      date: new Date().toISOString(),
    });
    saveData();
  } else {
    console.log("Insufficient funds!");
  }
});

eventEmitter.on("addUser", (user) => {
  saveData();
});

const authenticateUser = () => {
  const accountID = readlineSync.question("Enter your accountID: ");
  const pin = readlineSync.question("Enter your pin: ", { hideEchoBack: true });

  const user = users.find((u) => u.accountID === accountID && u.pin === pin);

  if (user) {
    console.log("Authentication successful!");
    return user;
  } else {
    console.log("Invalid credentials. Please try again.");
    return null;
  }
};


//! Checking Balance
const checkBalance = (user) => {
  console.log(`Your current balance is: $${user.balance}`);
  
};